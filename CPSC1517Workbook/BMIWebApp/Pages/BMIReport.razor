@using BMIWebApp.Data
@page "/BMIReport"

<h1>BMI Report</h1>

<h5 class="mt-3">BMI Categories:</h5>
<p class="mb-3">Underweight = &lt; 18.5 <br /> 
    Normal = 18.5 - 24.9 <br />
    Overweight = 25 - 29.9 <br /> 
    Obesity = BMI of 30 or greater
</p>

<table class="table table-striped">
    <thead>
        <tr>
            <th>Full Name</th>
            <th>Height in Inches</th>
            <th>Weight in Pounds</th>
            <th>BMI</th>
            <th>BMI Class</th>
        </tr>
    </thead>
    <tbody>
        @*For each person in the people list create a row with their details*@
        @foreach (var person in People)
        {
            <tr>
                <td>@person.FirstName @person.LastName</td>
                <td>@person.HeightInInches</td>
                <td>@person.WeightInPounds</td>
                <td>@Math.Round(@person.BMI, 2)</td>
                <td>@person.BMIClass</td>
            </tr>
        }
    </tbody>
</table>
<div class="alert alert-info">A total of @People.Count records were found.</div>

@if (ErrorMessage.Count > 0)
{
    @foreach (var error in ErrorMessage)
    {
        <div class="alert alert-danger">@error</div>
    }
}



@code {
    //Persons collection
    public List<BodyMass>? People { get; set; } = new();

    //Error Message
    public List<string> ErrorMessage { get; set; } = new();

    //FilePath
    [Inject]
    public IWebHostEnvironment WebHostEnvironment { get; set; }
    public string File { get; set; }

    //On Initialize set the location of the file to the property of File and generate table
    protected override void OnInitialized()
    {
        File = $@"{WebHostEnvironment.ContentRootPath}\Data\PeopleRecord.csv";

        using (StreamReader reader = new StreamReader(File))
        {
            string currentLine;

            while ((currentLine = reader.ReadLine()) != null)
            {
                try
                {
                    BodyMass person = null;

                    if ((person = BodyMass.Parse(currentLine)) != null)
                    {
                        People.Add(person);
                    }
                }
                catch (Exception e)
                {
                    ErrorMessage.Add(e.Message);
                }
            }
        }

        base.OnInitialized();
    }

}
